name: Push New Unstable Image

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.*/**'
      - 'README.md'

env:
  IMAGE_REPO: jeeaaasustest
  IMAGE_NAME: youtube-dl

jobs:
  Push-New-Unstable-Image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get environment variables
        uses: FranzDiebold/github-env-vars-action@v2

      - name: Set version
        run: |
          RELEASE_VERSION=$(cat release-versions/latest.txt)
          sed -i -E 's!(python.*install yt-dlp\[default\])!\1=='"$RELEASE_VERSION"'!i' Dockerfile

      - name: Set tag
        run: |
          if [ "$CI_ACTION_REF_NAME_SLUG" == 'master' ]
          then
            echo "IMAGE_TAG=unstable" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=$CI_ACTION_REF_NAME_SLUG" >> $GITHUB_ENV
          fi

      - name: Print image tag
        run: |
          echo "Branch: $CI_ACTION_REF_NAME"
          echo "Image Tag: ${{ env.IMAGE_TAG }}"

      - name: Configure updater
        run: |
          if [ "$CI_ACTION_REF_NAME_SLUG" == 'master' ]
          then
            sed -i -E '5s!.*!python3 -m pip --no-cache-dir --quiet install --upgrade --force-reinstall --no-deps git+https://github.com/yt-dlp/yt-dlp.git!i' 'root/app/youtube-dl/updater.sh'
          fi

      - name: Add git
        run: |
          if [ "$CI_ACTION_REF_NAME_SLUG" == 'master' ]
          then
            sed -i -E 's!(python3-pip)!\1 git!i' Dockerfile
          fi

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
